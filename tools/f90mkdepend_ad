#!/bin/bash
#
# Generate some make file dependency entries for a Fortran 90 file that employs "use".
#
# For every "use" statement, generate a dependency on lowercase(modulename).o
#
# Note: We assume that the name of a module and the same of source are the same.
#       The name of the source file should be all lower case (except for the extension).

# set defaults
FS=f
FS90=f90

# process option arguments
key_prev=
for key in "$@" ; do

    # If the previous option needs an argument, assign it.
    if test -n "$key_prev"; then
	    eval "$key_prev=\$key"
	    key_prev=
	    continue
    fi

    case $key in
    -fs)
        key_prev='FS'
        ;;
    -fs=*)
        FS="${key#*=}"
        ;;
    -fs90)
        key_prev='FS90'
        ;;
    -fs90=*)
        FS90="${key#*=}"
        ;;
    *)
        echo "f90mkdepend_ad: Unknown option: $key"
        exit 1
        ;;
    esac
done

# don't complain if *.f90 doesn't match any files
shopt -s nullglob

# TAF generated file should end with _ad for adjoint OR _tl for tangent linear
adsuff=""
if ls *_tl.$FS90 1> /dev/null 2>&1; then
    adsuff="_tl"
elif ls *_ad.$FS90 1> /dev/null 2>&1; then
    adsuff="_ad"
else
    echo "WARNING f90mkdepend_ad: no TAF generated code"
    exit 0
fi

# init files
log_file="f90mkdepend$adsuff.log"
dep_file="Makefile_ad.dep"

cat /dev/null > $log_file
cat /dev/null > $dep_file

# append module dependencies to Makefile
for filename in *$adsuff.$FS90 *$adsuff.$FS; do
  # Check for "use" to speed up processing
  if grep -i '^ *use ' $filename > /dev/null; then
    # Extract module name in lower case
    modreflist=$(grep -i '^ *use ' $filename | awk '{print tolower($2)}' | sed -e 's/,.*$//' -e 's/\r$//')

    echo "$filename => $modreflist" >> $log_file 

    depline="$filename:"
    for m in $modreflist; do
      # Ignore modules that don't have an appropriately named source file
      if [ -f $m.$FS90 ] || [ -f $m.$FS ]; then
        # Module for _ad/tl will come from a TAF _ad/tl file
        depline="$depline $m$adsuff.o"
      elif [ -f ${m%_mod}.$FS90 ] || [ -f ${m%_mod}.$FS ]; then
        # Source file name is module name without "_mod"
        depline="$depline ${m%_mod}$adsuff.o"
      else
        echo "WARNING: f90mkdepend_ad: in $filename no source file found for module $m" 1>&2
      fi
    done
    echo $depline >> $dep_file
  fi
done

echo "include $dep_file"
